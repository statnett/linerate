[project]
name = "linerate"
description = "Library for computing line ampacity ratings for overhead lines"
authors = [
  {name="Statnett Datascience", email="Datascience.Drift@Statnett.no"},
  {name="Yngve Mardal Moe", email="yngve.m.moe@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.9"
dynamic = ["version"]

dependencies = [
  "numpy",
  "scipy",
  "numba>=0.56.4",
  "pygeodesy",
]

[dependency-groups]
dev = [
  "black==25.1.0",
  "coverage[toml]",
  "flake8==7.1.2",
  "flake8-bugbear==24.12.12",
  "hypothesis>=6.56.2",
  "isort==6.0.1",
  "pre-commit",
  "pytest==8.3.4",
  "pytest-cov==6.0.0",
  "pytest-randomly==3.16.0",
]
docs = [
  "sphinx~=7.0.0",
  "sphinxcontrib-bibtex~=2.5.0",
  "sphinx-gallery~=0.19.0",
  "pydata-sphinx-theme~=0.16.0",
  "matplotlib~=3.6.0",
  "setuptools~=75.0.0",
]

[tool.setuptools_scm]
version_scheme="release-branch-semver"
local_scheme = "no-local-version"

[tool.isort]
profile = "black"
line_length = 100
known_first_party = []

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | profiling
)/
'''

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
              "pragma: no cover",
              "raise AssertionError",
              "raise NotImplementedError",
              "if verbose:",
              "if 0:",
              "if False:",
              ]
skip_covered = true
show_missing = true
precision = 2

[tool.coverage.run]
branch = true
source = ["linerate"]

[tool.pytest.ini_options]
log_file = "pytest.log"
log_level = "DEBUG"
log_file_format = "%(asctime)s - %(name)s - %(levelname)s: %(message)s"
norecursedirs = "_build tmp*  __pycache__ src prof wheel_files"
markers = [
  "integration: Mark test as an integration test",
]
filterwarnings = [
  "ignore:PyArray_GetNumericOps.*",
  "ignore:PyArray_SetNumericOps.*",
]

[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"
