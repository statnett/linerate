[project]
name = "linerate"
version = "2.0.13"
description = "Library for computing line ampacity ratings for overhead lines, modified for GridRaven"
readme = "README.md"
requires-python = ">=3.9,<3.13"
authors = [
    { name = "Statnett Datascience", email = "Datascience.Drift@Statnett.no" },
    { name = "Yngve Mardal Moe", email = "yngve.m.moe@gmail.com" },
    { name = "Joosep Simm", email = "joosep@gridraven.com" },
    { name = "Henri Manninen", email = "henri@gridraven.com" },
]
dependencies = [
    "numpy",
    "scipy",
    "numba >=0.56.4",
    "pygeodesy",
    "pydantic >=2.9.2, <3.0.0",
    "pandas >=2.2.3, <3.0.0",
    "pvlib>=0.11.1",
]

[tool.uv]
dev-dependencies = [
    "black ==24.4.2",
    "coverage[toml]",
    "flake8 ==7.0.0",
    "flake8-bugbear ==24.2.6",
    "hypothesis >=6.56.2",
    "isort ==5.13.2",
    "pre-commit",
    "pytest==8.1.1",
    "pytest-cov ==5.0.0",
    "pytest-randomly ==3.15.0",
]

[project.optional-dependencies]
docs = [
    "sphinx >=7.0.0, <8.0.0",
    "sphinxcontrib-bibtex >=2.5.0, <3.0.0",
    "sphinx-gallery >=0.15.0, <0.16.0",
    "pydata-sphinx-theme >=0.15.0, <0.16.0",
    "matplotlib >=3.6.0, <4.0.0",
    "setuptools >=70.0.0, <71.0.0"
]

[project.urls]
Repository = "https://github.com:Grid-Raven/linerate.git"

[tool.isort]
profile = "black"
line_length = 100
known_first_party = []

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | profiling
)/
'''

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
              "pragma: no cover",
              "raise AssertionError",
              "raise NotImplementedError",
              "if verbose:",
              "if 0:",
              "if False:",
              ]
skip_covered = true
show_missing = true
precision = 2

[tool.coverage.run]
branch = true
source = ["linerate"]

[tool.pytest.ini_options]
log_file = "pytest.log"
log_level = "DEBUG"
log_file_format = "%(asctime)s - %(name)s - %(levelname)s: %(message)s"
norecursedirs = "_build tmp*  __pycache__ src prof wheel_files"
markers = [
  "integration: Mark test as an integration test",
]
filterwarnings = [
  "ignore:PyArray_GetNumericOps.*",
  "ignore:PyArray_SetNumericOps.*",
]
