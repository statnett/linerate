name: publish

on:
  push:
    tags:
      - "*.*.*"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: github.repository_owner == 'statnett'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v6
      - name: Build package
        run: uv build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.12
        with:
          verbose: 'true'
          attestations: 'false'

  build_docs:
    needs: publish
    runs-on: ubuntu-latest
    if: github.repository_owner == 'statnett'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v6
      - name: Build docs
        run: |
          uv sync --group docs
          cd docs
          uv run make html
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  # Deployment job
  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
